# Example of using MCMC to generate a Bayesian posterior distribution for each parameter

# Originally published as a fitting job to be run in BioNetFit 1 in:
# Harmon et. al., "Timescale Separation of Positive and Negative Signaling Creates History-Dependent 
# Responses to IgE Receptor Stimulation" Scientific Reports, 2017

# The results of this run are expected to reproduce figure S10 in Harmon et al. 

# A large number of samples is needed to get a good distribution, so we recommend running on a cluster. 
# An example batch file to submit the job on a SLURM cluster is provided. 

#############
### PATHS ###
#############

# The directory to which job output will be written
output_dir=output/mcmc

# The BioNetGen executable - taken from system $BNGPATH
bng_command = /projects/posner_lab/BioNetGen-2.3.1/BNG2.pl
# The model file to be used in fitting simulations
model=model.bngl: p1_5.exp , p3_5.exp , p3_30.exp , p3_60.exp , p3_120.exp , p3_240.exp


#######################
### General Options ###
#######################


# Kill a job and move on without it if it runs over
wall_time_sim=180


verbosity=1
delete_old_files=1

#######################
### Fitting Options ###
#######################

step_size = 0.2
# Each chain runs 250000 iterations.
max_iterations=250000
# Run Bayesian MCMC
fit_type=am
# Run 2 independent chains
population_size=2
# Don't sample from the first 20000 iterations, allowing time to equilibrate
burn_in=10000
adaptive = 10000
# After the burn in, save every iterations. 
sample_every=1
num_to_output = 1
# Save a backup of the algorithm every 5 iterations
backup_every=5
# Use a chi-squared objective function. 
objfunc=chi_sq
# lognormal priors used in Harmon et al.
lognormal_var=X_tot__FREE	0.787694978391513	1
lognormal_var=k_Xoff__FREE	-5.71806966151439	1
lognormal_var=k_Xon__FREE	4.97304329331453	1
lognormal_var=kase__FREE	0.575353224191223	1
lognormal_var=kdegX__FREE	-3.49603202484465	1
lognormal_var=kdegran__FREE	5.2762165162286	1
lognormal_var=km_Ship1__FREE	-2.8441958935579	1
lognormal_var=km_Syk__FREE	-0.540934567116634	1
lognormal_var=km_x__FREE	-0.950063496638449	1
lognormal_var=koff__FREE	-2.35098513455981	1
lognormal_var=kp_Ship1__FREE	4.04458104776259	1
lognormal_var=kp_Syk__FREE	5.42400341236735	1
lognormal_var=kp_x__FREE	5.89295898292639	1
lognormal_var=kpten__FREE	-2.00213621038853	1
lognormal_var=ksynth1__FREE	-1.73299236261513	1
lognormal_var=pase__FREE	-0.795319997542839	1

# For an apples to apples comparison the mc sampler and the adaptive sampler were both started from these parameter values
starting_params = 4.473237219965695743e+01 7.716190647977729682e-07 9.929487860764758807e+03 3.243017361623191874e+01 5.437095929610422139e-04 1.392983519226530007e+04 1.914406863818694533e-03 4.825666793279002054e-01 1.619429481965224227e+01 1.649797436105210693e-03 1.266058052275716182e+04 7.666705612787074642e+05 9.976348384516360238e+06 1.945839662074096144e-02 2.514864926828097591e-01 2.307996421648980390e-01


